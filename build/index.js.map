{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.js","webpack:///webpack/bootstrap d1755448e779e23747b0","webpack:///./src/lib/index.js","webpack:///./src/lib/components/Keyboard.js","webpack:///./src/lib/services/PhysicalKeyboard.js","webpack:///./src/lib/services/KeyboardLayout.js","webpack:///./src/lib/services/Utilities.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","value","__WEBPACK_IMPORTED_MODULE_0__components_Keyboard__","_classCallCheck","instance","Constructor","TypeError","__WEBPACK_IMPORTED_MODULE_0__Keyboard_css__","__WEBPACK_IMPORTED_MODULE_1__services_PhysicalKeyboard__","__WEBPACK_IMPORTED_MODULE_2__services_KeyboardLayout__","__WEBPACK_IMPORTED_MODULE_3__services_Utilities__","_typeof","Symbol","iterator","obj","constructor","SimpleKeyboard","_initialiseProps","keyboardDOMQuery","arguments","length","undefined","options","keyboardDOM","document","querySelector","layoutName","theme","inputName","input","keyboardDOMClass","split","join","timers","render","console","error","window","camelCase","physicalKeyboardInterface","_this","handleButtonClicked","button","debug","onKeyPress","newLineOnEnter","updatedInput","getUpdatedInput","log","syncInstanceInputs","onChange","dispatch","section","replaceInput","clearInput","getInput","setInput","inputObj","setOptions","option","assign","clear","innerHTML","className","callback","keys","forEach","key","layoutClass","layout","getLayout","buttonThemesParsed","Array","isArray","buttonTheme","themeObj","buttons","class","themeButtons","themeButton","themeParsed","warn","row","rowArray","rowDOM","createElement","fctBtnClass","getButtonClass","buttonThemeClass","buttonDisplayName","getButtonDisplayName","display","mergeDisplay","buttonDOM","onclick","buttonSpanDOM","appendChild","onInit","PhysicalKeyboard","simpleKeyboardInstance","initKeyboardListener","addEventListener","event","physicalKeyboardHighlight","buttonPressed","getSimpleKeyboardLayoutKey","output","code","includes","toUpperCase","Number","isInteger","toLowerCase","KeyboardLayout","default","shift","_createClass","defineProperties","target","props","descriptor","writable","protoProps","staticProps","Utilities","string","{bksp}","{backspace}","{enter}","{shift}","{shiftleft}","{shiftright}","{alt}","{s}","{tab}","{lock}","{capslock}","{accept}","{space}","{//}","{esc}","{escape}","{f1}","{f2}","{f3}","{f4}","{f5}","{f6}","{f7}","{f8}","{f9}","{f10}","{f11}","{f12}","{numpaddivide}","{numlock}","{arrowup}","{arrowleft}","{arrowdown}","{arrowright}","{prtscr}","{scrolllock}","{pause}","{insert}","{home}","{pageup}","{delete}","{end}","{pagedown}","{numpadmultiply}","{numpadsubtract}","{numpadadd}","{numpadenter}","{period}","{numpaddecimal}","{numpad0}","{numpad1}","{numpad2}","{numpad3}","{numpad4}","{numpad5}","{numpad6}","{numpad7}","{numpad8}","{numpad9}","buttonTypeClass","buttonWithoutBraces","replace","normalizeString","getDefaultDiplay","slice","match","trim","reduce","word"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleKeyboard\"] = factory();\n\telse\n\t\troot[\"SimpleKeyboard\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleKeyboard\"] = factory();\n\telse\n\t\troot[\"SimpleKeyboard\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Keyboard__ = __webpack_require__(2);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_0__components_Keyboard__[\"a\" /* default */]);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Keyboard_css__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Keyboard_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Keyboard_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_PhysicalKeyboard__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_KeyboardLayout__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_Utilities__ = __webpack_require__(6);\nvar _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}// Services\nvar SimpleKeyboard=function SimpleKeyboard(){_classCallCheck(this,SimpleKeyboard);_initialiseProps.call(this);var keyboardDOMQuery=typeof(arguments.length<=0?undefined:arguments[0])===\"string\"?arguments.length<=0?undefined:arguments[0]:'.simple-keyboard';var options=_typeof(arguments.length<=0?undefined:arguments[0])===\"object\"?arguments.length<=0?undefined:arguments[0]:arguments.length<=1?undefined:arguments[1];if(!options)options={};/**\r\n     * Processing options\r\n     */this.keyboardDOM=document.querySelector(keyboardDOMQuery);this.options=options;this.options.layoutName=this.options.layoutName||\"default\";this.options.theme=this.options.theme||\"hg-theme-default\";this.options.inputName=this.options.inputName||\"default\";this.input={};this.input[this.options.inputName]='';this.keyboardDOMClass=keyboardDOMQuery.split('.').join(\"\");this.timers={};/**\r\n     * Rendering keyboard\r\n     */if(this.keyboardDOM)this.render();else console.error('\"'+keyboardDOMQuery+'\" was not found in the DOM.');/**\r\n     * Saving instance\r\n     * This enables multiple simple-keyboard support with easier management\r\n     */if(!window['SimpleKeyboardInstances'])window['SimpleKeyboardInstances']={};window['SimpleKeyboardInstances'][__WEBPACK_IMPORTED_MODULE_3__services_Utilities__[\"a\" /* default */].camelCase(this.keyboardDOMClass)]=this;/**\r\n     * Physical Keyboard support\r\n     */this.physicalKeyboardInterface=new __WEBPACK_IMPORTED_MODULE_1__services_PhysicalKeyboard__[\"a\" /* default */](this);};var _initialiseProps=function _initialiseProps(){var _this=this;this.handleButtonClicked=function(button){var debug=_this.options.debug;/**\r\n     * Ignoring placeholder buttons\r\n     */if(button==='{//}')return false;/**\r\n     * Calling onKeyPress\r\n     */if(typeof _this.options.onKeyPress===\"function\")_this.options.onKeyPress(button);/**\r\n     * Updating input\r\n     */var options={newLineOnEnter:_this.options.newLineOnEnter===true};if(!_this.input[_this.options.inputName])_this.input[_this.options.inputName]='';var updatedInput=__WEBPACK_IMPORTED_MODULE_3__services_Utilities__[\"a\" /* default */].getUpdatedInput(button,_this.input[_this.options.inputName],options);if(_this.input[_this.options.inputName]!==updatedInput){_this.input[_this.options.inputName]=updatedInput;if(debug)console.log('Input changed:',_this.input);/**\r\n       * syncInstanceInputs\r\n       */if(_this.options.syncInstanceInputs)_this.syncInstanceInputs(_this.input);/**\r\n       * Calling onChange\r\n       */if(typeof _this.options.onChange===\"function\")_this.options.onChange(_this.input[_this.options.inputName]);}if(debug){console.log(\"Key pressed:\",button);}};this.syncInstanceInputs=function(){_this.dispatch(function(section){section.replaceInput(_this.input);});};this.clearInput=function(inputName){inputName=inputName||_this.options.inputName;_this.input[_this.options.inputName]='';/**\r\n     * syncInstanceInputs\r\n     */if(_this.options.syncInstanceInputs)_this.syncInstanceInputs(_this.input);};this.getInput=function(inputName){inputName=inputName||_this.options.inputName;/**\r\n     * syncInstanceInputs\r\n     */if(_this.options.syncInstanceInputs)_this.syncInstanceInputs(_this.input);return _this.input[_this.options.inputName];};this.setInput=function(input,inputName){inputName=inputName||_this.options.inputName;_this.input[inputName]=input;/**\r\n     * syncInstanceInputs\r\n     */if(_this.options.syncInstanceInputs)_this.syncInstanceInputs(_this.input);};this.replaceInput=function(inputObj){_this.input=inputObj;};this.setOptions=function(option){option=option||{};_this.options=Object.assign(_this.options,option);_this.render();};this.clear=function(){_this.keyboardDOM.innerHTML='';_this.keyboardDOM.className=_this.keyboardDOMClass;};this.dispatch=function(callback){if(!window['SimpleKeyboardInstances']){console.error(\"SimpleKeyboardInstances is not defined. Dispatch cannot be called.\");return false;}return Object.keys(window['SimpleKeyboardInstances']).forEach(function(key){callback(window['SimpleKeyboardInstances'][key],key);});};this.render=function(){/**\r\n     * Clear keyboard\r\n     */_this.clear();var layoutClass=_this.options.layout?\"hg-layout-custom\":'hg-layout-'+_this.options.layoutName;var layout=_this.options.layout||__WEBPACK_IMPORTED_MODULE_2__services_KeyboardLayout__[\"a\" /* default */].getLayout(_this.options.layoutName);/**\r\n     * Account for buttonTheme, if set\r\n     */var buttonThemesParsed={};if(Array.isArray(_this.options.buttonTheme)){_this.options.buttonTheme.forEach(function(themeObj){if(themeObj.buttons&&themeObj.class){var themeButtons=themeObj.buttons.split(' ');if(Array.isArray(themeButtons)){themeButtons.forEach(function(themeButton){var themeParsed=buttonThemesParsed[themeButton];// If the button has already been added\nif(themeParsed)buttonThemesParsed[themeButton]=themeParsed+' '+themeObj.class;else buttonThemesParsed[themeButton]=themeObj.class;});}}else{console.warn('buttonTheme row is missing the \"buttons\" or the \"class\". Please check the documentation.');}});}/**\r\n     * Adding themeClass, layoutClass to keyboardDOM\r\n     */_this.keyboardDOM.className+=' '+_this.options.theme+' '+layoutClass;/**\r\n     * Iterating through each row\r\n     */layout[_this.options.layoutName].forEach(function(row){var rowArray=row.split(' ');/**\r\n       * Creating empty row\r\n       */var rowDOM=document.createElement('div');rowDOM.className+=\"hg-row\";/**\r\n       * Iterating through each button in row\r\n       */rowArray.forEach(function(button){var fctBtnClass=__WEBPACK_IMPORTED_MODULE_3__services_Utilities__[\"a\" /* default */].getButtonClass(button);var buttonThemeClass=buttonThemesParsed[button];var buttonDisplayName=__WEBPACK_IMPORTED_MODULE_3__services_Utilities__[\"a\" /* default */].getButtonDisplayName(button,_this.options.display,_this.options.mergeDisplay);/**\r\n         * Creating button\r\n         */var buttonDOM=document.createElement('div');buttonDOM.className+='hg-button '+fctBtnClass+(buttonThemeClass?\" \"+buttonThemeClass:\"\");buttonDOM.onclick=function(){return _this.handleButtonClicked(button);};/**\r\n         * Adding button label to button\r\n         */var buttonSpanDOM=document.createElement('span');buttonSpanDOM.innerHTML=buttonDisplayName;buttonDOM.appendChild(buttonSpanDOM);/**\r\n         * Appending button to row\r\n         */rowDOM.appendChild(buttonDOM);/**\r\n         * Calling onInit\r\n         */if(typeof _this.options.onInit===\"function\")_this.options.onInit();});/**\r\n       * Appending row to keyboard\r\n       */_this.keyboardDOM.appendChild(rowDOM);});};};/* harmony default export */ __webpack_exports__[\"a\"] = (SimpleKeyboard);\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var PhysicalKeyboard=function PhysicalKeyboard(simpleKeyboardInstance){var _this=this;_classCallCheck(this,PhysicalKeyboard);this.initKeyboardListener=function(){// Normal Keyboard\ndocument.addEventListener(\"keydown\",function(event){if(_this.simpleKeyboardInstance.options.physicalKeyboardHighlight){var buttonPressed=_this.getSimpleKeyboardLayoutKey(event);_this.simpleKeyboardInstance.dispatch(function(section){section.setOptions({buttonTheme:[{class:\"hg-selectedButton\",buttons:buttonPressed+' {'+buttonPressed+'}'}]});});}});// Removing button style on keyup\ndocument.addEventListener(\"keyup\",function(event){if(_this.simpleKeyboardInstance.options.physicalKeyboardHighlight){_this.simpleKeyboardInstance.dispatch(function(section){section.setOptions({buttonTheme:[]});});}});};this.getSimpleKeyboardLayoutKey=function(event){if(_this.simpleKeyboardInstance.options.debug){console.log(event);}var output=void 0;if(event.code.includes(\"Numpad\")||event.code.includes(\"Shift\")||event.code.includes(\"Space\")||event.code.includes(\"Backspace\")){output=event.code;}else{output=event.key;}/**\r\n     * If button is not uppercase, casting to lowercase\r\n     */if(output!==output.toUpperCase()||event.code[0]===\"F\"&&Number.isInteger(Number(event.code[1]))&&event.code.length<=3){output=output.toLowerCase();}return output;};this.simpleKeyboardInstance=simpleKeyboardInstance;if(!window['SimpleKeyboardPhysicalKeyboardInit'])window['SimpleKeyboardPhysicalKeyboardInit']=true;else return false;this.initKeyboardListener();};/* harmony default export */ __webpack_exports__[\"a\"] = (PhysicalKeyboard);\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var KeyboardLayout=function KeyboardLayout(){_classCallCheck(this,KeyboardLayout);};KeyboardLayout.getLayout=function(layout){if(layout===\"qwerty\"){return{'default':['` 1 2 3 4 5 6 7 8 9 0 - = {bksp}','{tab} q w e r t y u i o p [ ] \\\\','{lock} a s d f g h j k l ; \\' {enter}','{shift} z x c v b n m , . / {shift}','.com @ {space}'],'shift':['~ ! @ # $ % ^ & * ( ) _ + {bksp}','{tab} Q W E R T Y U I O P { } |','{lock} A S D F G H J K L : \" {enter}','{shift} Z X C V B N M < > ? {shift}','.com @ {space}']};}else if(layout===\"numeric\"){return{'default':['1 2 3','4 5 6','7 8 9','{//} 0 {bksp}']};}else{return KeyboardLayout.getLayout(\"qwerty\");}};/* harmony default export */ __webpack_exports__[\"a\"] = (KeyboardLayout);\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var Utilities=function(){function Utilities(){_classCallCheck(this,Utilities);}_createClass(Utilities,null,[{key:\"normalizeString\",value:function normalizeString(string){var output=void 0;if(string===\"@\")output='at';else if(string===\",\")output='comma';else if(string===\".\")output='dot';else if(string===\"\\\\\")output='backslash';else if(string===\"/\")output='fordardslash';else if(string===\"*\")output='asterisk';else if(string===\"&\")output='ampersand';else if(string===\"$\")output='dollarsign';else if(string===\"=\")output='equals';else if(string===\"+\")output='plus';else if(string===\"-\")output='minus';else if(string===\"'\")output='apostrophe';else if(string===\";\")output='colon';else if(string===\"[\")output='openbracket';else if(string===\"]\")output='closebracket';else if(string===\"//\")output='emptybutton';else if(string===\".com\")output='com';else output='';return output?\" hg-button-\"+output:'';}},{key:\"getDefaultDiplay\",value:function getDefaultDiplay(){return{'{bksp}':'backspace','{backspace}':'backspace','{enter}':'< enter','{shift}':'shift','{shiftleft}':'shift','{shiftright}':'shift','{alt}':'alt','{s}':'shift','{tab}':'tab','{lock}':'caps','{capslock}':'caps','{accept}':'Submit','{space}':' ','{//}':' ',\"{esc}\":\"esc\",\"{escape}\":\"esc\",\"{f1}\":\"f1\",\"{f2}\":\"f2\",\"{f3}\":\"f3\",\"{f4}\":\"f4\",\"{f5}\":\"f5\",\"{f6}\":\"f6\",\"{f7}\":\"f7\",\"{f8}\":\"f8\",\"{f9}\":\"f9\",\"{f10}\":\"f10\",\"{f11}\":\"f11\",\"{f12}\":\"f12\",'{numpaddivide}':'/','{numlock}':'lock',\"{arrowup}\":\"↑\",\"{arrowleft}\":\"←\",\"{arrowdown}\":\"↓\",\"{arrowright}\":\"→\",\"{prtscr}\":\"print\",\"{scrolllock}\":\"scroll\",\"{pause}\":\"pause\",\"{insert}\":\"ins\",\"{home}\":\"home\",\"{pageup}\":\"up\",\"{delete}\":\"del\",\"{end}\":\"end\",\"{pagedown}\":\"down\",\"{numpadmultiply}\":\"*\",\"{numpadsubtract}\":\"-\",\"{numpadadd}\":\"+\",\"{numpadenter}\":\"enter\",\"{period}\":\".\",\"{numpaddecimal}\":\".\",\"{numpad0}\":\"0\",\"{numpad1}\":\"1\",\"{numpad2}\":\"2\",\"{numpad3}\":\"3\",\"{numpad4}\":\"4\",\"{numpad5}\":\"5\",\"{numpad6}\":\"6\",\"{numpad7}\":\"7\",\"{numpad8}\":\"8\",\"{numpad9}\":\"9\"};}}]);return Utilities;}();Utilities.getButtonClass=function(button){var buttonTypeClass=button.includes(\"{\")&&button!=='{//}'?\"functionBtn\":\"standardBtn\";var buttonWithoutBraces=button.replace(\"{\",\"\").replace(\"}\",\"\");var buttonNormalized=buttonTypeClass===\"standardBtn\"?Utilities.normalizeString(buttonWithoutBraces):\" hg-button-\"+buttonWithoutBraces;return\"hg-\"+buttonTypeClass+buttonNormalized;};Utilities.getButtonDisplayName=function(button,display,mergeDisplay){if(mergeDisplay){display=Object.assign({},Utilities.getDefaultDiplay(),display);}else{display=display||Utilities.getDefaultDiplay();}return display[button]||button;};Utilities.getUpdatedInput=function(button,input,options){var output=input;var newLineOnEnter=options.newLineOnEnter;if((button===\"{bksp}\"||button===\"{backspace}\")&&output.length>0){/**\r\n       * Emojis are made out of two characters, so we must take a custom approach to trim them.\r\n       * For more info: https://mathiasbynens.be/notes/javascript-unicode\r\n       */var lastTwoChars=output.slice(-2);var emojiMatched=lastTwoChars.match(/([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g);if(emojiMatched){output=output.slice(0,-2);}else{output=output.slice(0,-1);}}else if(button===\"{space}\")output=output+' ';else if(button===\"{tab}\")output=output+\"\\t\";else if((button===\"{enter}\"||button===\"{numpadenter}\")&&newLineOnEnter)output=output+\"\\n\";else if(button.includes(\"numpad\")&&Number.isInteger(Number(button[button.length-2]))){output=output+button[button.length-2];}else if(button===\"{numpaddivide}\")output=output+'/';else if(button===\"{numpadmultiply}\")output=output+'*';else if(button===\"{numpadsubtract}\")output=output+'-';else if(button===\"{numpadadd}\")output=output+'+';else if(button===\"{numpadadd}\")output=output+'+';else if(button===\"{numpaddecimal}\")output=output+'.';else if(!button.includes(\"{\")&&!button.includes(\"}\"))output=output+button;return output;};Utilities.camelCase=function(string){return string.toLowerCase().trim().split(/[.\\-_\\s]/g).reduce(function(string,word){return string+word[0].toUpperCase()+word.slice(1);});};/* harmony default export */ __webpack_exports__[\"a\"] = (Utilities);\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d1755448e779e23747b0","import SimpleKeyboard from './components/Keyboard';\r\nexport default SimpleKeyboard;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/index.js","import './Keyboard.css';\r\n\r\n// Services\r\nimport PhysicalKeyboard from '../services/PhysicalKeyboard';\r\nimport KeyboardLayout from '../services/KeyboardLayout';\r\nimport Utilities from '../services/Utilities';\r\n\r\nclass SimpleKeyboard {\r\n  constructor(...params){\r\n    let keyboardDOMQuery = typeof params[0] === \"string\" ? params[0] : '.simple-keyboard';\r\n    let options = typeof params[0] === \"object\" ? params[0] : params[1];\r\n\r\n    if(!options)\r\n      options = {};\r\n\r\n    /**\r\n     * Processing options\r\n     */\r\n    this.keyboardDOM = document.querySelector(keyboardDOMQuery);\r\n    this.options = options;\r\n    this.options.layoutName = this.options.layoutName || \"default\";\r\n    this.options.theme = this.options.theme || \"hg-theme-default\";\r\n    this.options.inputName = this.options.inputName || \"default\";\r\n    this.input = {};\r\n    this.input[this.options.inputName] = '';\r\n    this.keyboardDOMClass = keyboardDOMQuery.split('.').join(\"\");\r\n    this.timers = {};\r\n\r\n    /**\r\n     * Rendering keyboard\r\n     */\r\n    if(this.keyboardDOM)\r\n      this.render();\r\n    else\r\n      console.error(`\"${keyboardDOMQuery}\" was not found in the DOM.`);\r\n\r\n    /**\r\n     * Saving instance\r\n     * This enables multiple simple-keyboard support with easier management\r\n     */\r\n    if(!window['SimpleKeyboardInstances'])\r\n      window['SimpleKeyboardInstances'] = {};\r\n      \r\n    window['SimpleKeyboardInstances'][Utilities.camelCase(this.keyboardDOMClass)] = this;\r\n\r\n    /**\r\n     * Physical Keyboard support\r\n     */\r\n    this.physicalKeyboardInterface = new PhysicalKeyboard(this);\r\n  }\r\n\r\n  handleButtonClicked = (button) => {\r\n    let debug = this.options.debug;\r\n    \r\n    /**\r\n     * Ignoring placeholder buttons\r\n     */\r\n    if(button === '{//}')\r\n      return false;\r\n\r\n    /**\r\n     * Calling onKeyPress\r\n     */\r\n    if(typeof this.options.onKeyPress === \"function\")\r\n      this.options.onKeyPress(button);\r\n\r\n    /**\r\n     * Updating input\r\n     */\r\n    let options = {\r\n      newLineOnEnter: (this.options.newLineOnEnter === true)\r\n    }\r\n    \r\n    if(!this.input[this.options.inputName])\r\n      this.input[this.options.inputName] = '';\r\n\r\n    let updatedInput = Utilities.getUpdatedInput(button, this.input[this.options.inputName], options);\r\n\r\n    if(this.input[this.options.inputName] !== updatedInput){\r\n      this.input[this.options.inputName] = updatedInput;\r\n\r\n      if(debug)\r\n        console.log('Input changed:', this.input);\r\n\r\n      /**\r\n       * syncInstanceInputs\r\n       */\r\n      if(this.options.syncInstanceInputs)\r\n        this.syncInstanceInputs(this.input);\r\n\r\n      /**\r\n       * Calling onChange\r\n       */\r\n      if(typeof this.options.onChange === \"function\")\r\n        this.options.onChange(this.input[this.options.inputName]);\r\n    }\r\n    \r\n    if(debug){\r\n      console.log(\"Key pressed:\", button);\r\n    }\r\n  }\r\n\r\n  syncInstanceInputs = () => {\r\n    this.dispatch((section) => {\r\n      section.replaceInput(this.input);\r\n    });\r\n  }\r\n\r\n  clearInput = (inputName) => {\r\n    inputName = inputName || this.options.inputName;\r\n    this.input[this.options.inputName] = '';\r\n\r\n    /**\r\n     * syncInstanceInputs\r\n     */\r\n    if(this.options.syncInstanceInputs)\r\n      this.syncInstanceInputs(this.input);\r\n  }\r\n\r\n  getInput = (inputName) => {\r\n    inputName = inputName || this.options.inputName;\r\n\r\n    /**\r\n     * syncInstanceInputs\r\n     */\r\n    if(this.options.syncInstanceInputs)\r\n      this.syncInstanceInputs(this.input);\r\n\r\n    return this.input[this.options.inputName];\r\n  }\r\n\r\n  setInput = (input, inputName) => {\r\n    inputName = inputName || this.options.inputName;\r\n    this.input[inputName] = input;\r\n\r\n    /**\r\n     * syncInstanceInputs\r\n     */\r\n    if(this.options.syncInstanceInputs)\r\n      this.syncInstanceInputs(this.input);\r\n  }\r\n\r\n  replaceInput = (inputObj) => {\r\n    this.input = inputObj;\r\n  }\r\n\r\n  setOptions = option => {\r\n    option = option || {};\r\n    this.options = Object.assign(this.options, option);\r\n    this.render();\r\n  }\r\n\r\n  clear = () => {\r\n    this.keyboardDOM.innerHTML = '';\r\n    this.keyboardDOM.className = this.keyboardDOMClass;\r\n  }\r\n\r\n  dispatch = (callback) => {\r\n    if(!window['SimpleKeyboardInstances']){\r\n      console.error(\"SimpleKeyboardInstances is not defined. Dispatch cannot be called.\")\r\n      return false;\r\n    }\r\n    \r\n    return Object.keys(window['SimpleKeyboardInstances']).forEach((key) => {\r\n      callback(window['SimpleKeyboardInstances'][key], key);\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    /**\r\n     * Clear keyboard\r\n     */\r\n    this.clear();\r\n\r\n    let layoutClass = this.options.layout ? \"hg-layout-custom\" : `hg-layout-${this.options.layoutName}`;\r\n    let layout = this.options.layout || KeyboardLayout.getLayout(this.options.layoutName);\r\n\r\n    /**\r\n     * Account for buttonTheme, if set\r\n     */\r\n    let buttonThemesParsed = {};\r\n    if(Array.isArray(this.options.buttonTheme)){\r\n      this.options.buttonTheme.forEach(themeObj => {\r\n        if(themeObj.buttons && themeObj.class){\r\n          let themeButtons = themeObj.buttons.split(' ');\r\n\r\n          if(Array.isArray(themeButtons)){\r\n            themeButtons.forEach(themeButton => {\r\n              let themeParsed = buttonThemesParsed[themeButton];\r\n\r\n              // If the button has already been added\r\n              if(themeParsed)\r\n                buttonThemesParsed[themeButton] = `${themeParsed} ${themeObj.class}`;\r\n              else\r\n                buttonThemesParsed[themeButton] = themeObj.class;\r\n            });\r\n          }\r\n        } else {\r\n          console.warn(`buttonTheme row is missing the \"buttons\" or the \"class\". Please check the documentation.`)\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Adding themeClass, layoutClass to keyboardDOM\r\n     */\r\n    this.keyboardDOM.className += ` ${this.options.theme} ${layoutClass}`;\r\n\r\n    /**\r\n     * Iterating through each row\r\n     */\r\n    layout[this.options.layoutName].forEach((row) => {\r\n      let rowArray = row.split(' ');\r\n\r\n      /**\r\n       * Creating empty row\r\n       */\r\n      var rowDOM = document.createElement('div');\r\n      rowDOM.className += \"hg-row\";\r\n\r\n      /**\r\n       * Iterating through each button in row\r\n       */\r\n      rowArray.forEach((button) => {\r\n        let fctBtnClass = Utilities.getButtonClass(button);\r\n        let buttonThemeClass = buttonThemesParsed[button];\r\n        let buttonDisplayName = Utilities.getButtonDisplayName(button, this.options.display, this.options.mergeDisplay);\r\n\r\n        /**\r\n         * Creating button\r\n         */\r\n        var buttonDOM = document.createElement('div');\r\n        buttonDOM.className += `hg-button ${fctBtnClass}${buttonThemeClass ? \" \"+buttonThemeClass : \"\"}`;\r\n        buttonDOM.onclick = () => this.handleButtonClicked(button);\r\n\r\n        /**\r\n         * Adding button label to button\r\n         */\r\n        var buttonSpanDOM = document.createElement('span');\r\n        buttonSpanDOM.innerHTML = buttonDisplayName;\r\n        buttonDOM.appendChild(buttonSpanDOM);\r\n\r\n        /**\r\n         * Appending button to row\r\n         */\r\n        rowDOM.appendChild(buttonDOM);\r\n\r\n        /**\r\n         * Calling onInit\r\n         */\r\n        if(typeof this.options.onInit === \"function\")\r\n        this.options.onInit();\r\n\r\n      });\r\n\r\n      /**\r\n       * Appending row to keyboard\r\n       */\r\n      this.keyboardDOM.appendChild(rowDOM);\r\n    });\r\n  }\r\n}\r\n\r\nexport default SimpleKeyboard;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/components/Keyboard.js","class PhysicalKeyboard {\r\n  constructor(simpleKeyboardInstance){\r\n    this.simpleKeyboardInstance = simpleKeyboardInstance;\r\n\r\n    if(!window['SimpleKeyboardPhysicalKeyboardInit'])\r\n      window['SimpleKeyboardPhysicalKeyboardInit'] = true;\r\n    else\r\n      return false;\r\n\r\n    this.initKeyboardListener();\r\n  }\r\n\r\n  initKeyboardListener = () => {\r\n    // Normal Keyboard\r\n    document.addEventListener(\"keydown\", (event) => {\r\n      if(this.simpleKeyboardInstance.options.physicalKeyboardHighlight){\r\n        let buttonPressed = this.getSimpleKeyboardLayoutKey(event);\r\n\r\n        this.simpleKeyboardInstance.dispatch(section => {\r\n          section.setOptions({\r\n            buttonTheme: [\r\n              {\r\n                class: \"hg-selectedButton\",\r\n                buttons: `${buttonPressed} {${buttonPressed}}`\r\n              }\r\n            ]\r\n          })\r\n        });\r\n      }\r\n    });\r\n\r\n    // Removing button style on keyup\r\n    document.addEventListener(\"keyup\", (event) => {\r\n      if(this.simpleKeyboardInstance.options.physicalKeyboardHighlight){\r\n\r\n        this.simpleKeyboardInstance.dispatch(section => {\r\n          section.setOptions({\r\n            buttonTheme: []\r\n          })\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getSimpleKeyboardLayoutKey = (event) => {\r\n    if(this.simpleKeyboardInstance.options.debug){\r\n      console.log(event);\r\n    }\r\n    \r\n    let output;\r\n\r\n    if(\r\n      event.code.includes(\"Numpad\") ||\r\n      event.code.includes(\"Shift\") ||\r\n      event.code.includes(\"Space\") ||\r\n      event.code.includes(\"Backspace\")\r\n    ){\r\n      output = event.code;\r\n    } else {\r\n      output = event.key;\r\n    }\r\n\r\n    /**\r\n     * If button is not uppercase, casting to lowercase\r\n     */\r\n    if (\r\n      output !== output.toUpperCase() ||\r\n      (event.code[0] === \"F\" && Number.isInteger(Number(event.code[1])) && event.code.length <= 3)\r\n    ) {\r\n      output = output.toLowerCase();\r\n    }\r\n\r\n    return output;\r\n  }\r\n}\r\n\r\nexport default PhysicalKeyboard;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/services/PhysicalKeyboard.js","class KeyboardLayout {\r\n\r\n  static getLayout = layout => {\r\n    if(layout === \"qwerty\"){\r\n      return {\r\n        'default': [\r\n          '` 1 2 3 4 5 6 7 8 9 0 - = {bksp}',\r\n          '{tab} q w e r t y u i o p [ ] \\\\',\r\n          '{lock} a s d f g h j k l ; \\' {enter}',\r\n          '{shift} z x c v b n m , . / {shift}',\r\n          '.com @ {space}'\r\n        ],\r\n        'shift': [\r\n          '~ ! @ # $ % ^ & * ( ) _ + {bksp}',\r\n          '{tab} Q W E R T Y U I O P { } |',\r\n          '{lock} A S D F G H J K L : \" {enter}',\r\n          '{shift} Z X C V B N M < > ? {shift}',\r\n          '.com @ {space}'\r\n        ]\r\n      };\r\n    } else if(layout === \"numeric\"){\r\n      return {\r\n        'default': [\r\n          '1 2 3',\r\n          '4 5 6',\r\n          '7 8 9',\r\n          '{//} 0 {bksp}'\r\n        ]\r\n      };\r\n    } else {\r\n      return KeyboardLayout.getLayout(\"qwerty\");\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default KeyboardLayout;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/services/KeyboardLayout.js","class Utilities {\r\n  static normalizeString(string){\r\n    let output;\r\n\r\n    if(string === \"@\")\r\n      output = 'at';\r\n    else if(string === \",\")\r\n      output = 'comma';\r\n    else if(string === \".\")\r\n      output = 'dot';\r\n    else if(string === \"\\\\\")\r\n      output = 'backslash';\r\n    else if(string === \"/\")\r\n      output = 'fordardslash';\r\n    else if(string === \"*\")\r\n      output = 'asterisk';\r\n    else if(string === \"&\")\r\n      output = 'ampersand';\r\n    else if(string === \"$\")\r\n      output = 'dollarsign';\r\n    else if(string === \"=\")\r\n      output = 'equals';\r\n    else if(string === \"+\")\r\n      output = 'plus';\r\n    else if(string === \"-\")\r\n      output = 'minus';\r\n    else if(string === \"'\")\r\n      output = 'apostrophe';\r\n    else if(string === \";\")\r\n      output = 'colon';\r\n    else if(string === \"[\")\r\n      output = 'openbracket';\r\n    else if(string === \"]\")\r\n      output = 'closebracket';\r\n    else if(string === \"//\")\r\n      output = 'emptybutton';\r\n    else if(string === \".com\")\r\n      output = 'com';\r\n    else\r\n      output = '';\r\n\r\n    return output ? ` hg-button-${output}` : '';\r\n  }\r\n\r\n  static getButtonClass = button => {\r\n    let buttonTypeClass = (button.includes(\"{\") && button !== '{//}') ? \"functionBtn\" : \"standardBtn\";\r\n    let buttonWithoutBraces = button.replace(\"{\", \"\").replace(\"}\", \"\");\r\n\r\n    let buttonNormalized =\r\n      buttonTypeClass === \"standardBtn\" ?\r\n        Utilities.normalizeString(buttonWithoutBraces) : ` hg-button-${buttonWithoutBraces}`;\r\n\r\n    return `hg-${buttonTypeClass}${buttonNormalized}`;\r\n  }\r\n\r\n  static getDefaultDiplay(){\r\n    return {\r\n      '{bksp}': 'backspace',\r\n      '{backspace}': 'backspace',\r\n      '{enter}': '< enter',\r\n      '{shift}': 'shift',\r\n      '{shiftleft}': 'shift',\r\n      '{shiftright}': 'shift',\r\n      '{alt}': 'alt',\r\n      '{s}': 'shift',\r\n      '{tab}': 'tab',\r\n      '{lock}': 'caps',\r\n      '{capslock}': 'caps',\r\n      '{accept}': 'Submit',\r\n      '{space}': ' ',\r\n      '{//}': ' ',\r\n      \"{esc}\": \"esc\",\r\n      \"{escape}\": \"esc\",\r\n      \"{f1}\": \"f1\",\r\n      \"{f2}\": \"f2\",\r\n      \"{f3}\": \"f3\",\r\n      \"{f4}\": \"f4\",\r\n      \"{f5}\": \"f5\",\r\n      \"{f6}\": \"f6\",\r\n      \"{f7}\": \"f7\",\r\n      \"{f8}\": \"f8\",\r\n      \"{f9}\": \"f9\",\r\n      \"{f10}\": \"f10\",\r\n      \"{f11}\": \"f11\",\r\n      \"{f12}\": \"f12\",\r\n      '{numpaddivide}': '/',\r\n      '{numlock}': 'lock',\r\n      \"{arrowup}\": \"↑\",\r\n      \"{arrowleft}\": \"←\",\r\n      \"{arrowdown}\": \"↓\",\r\n      \"{arrowright}\": \"→\",\r\n      \"{prtscr}\": \"print\",\r\n      \"{scrolllock}\": \"scroll\",\r\n      \"{pause}\": \"pause\",\r\n      \"{insert}\": \"ins\",\r\n      \"{home}\": \"home\",\r\n      \"{pageup}\": \"up\",\r\n      \"{delete}\": \"del\",\r\n      \"{end}\": \"end\",\r\n      \"{pagedown}\": \"down\",\r\n      \"{numpadmultiply}\": \"*\",\r\n      \"{numpadsubtract}\": \"-\",\r\n      \"{numpadadd}\": \"+\",\r\n      \"{numpadenter}\": \"enter\",\r\n      \"{period}\": \".\",\r\n      \"{numpaddecimal}\": \".\",\r\n      \"{numpad0}\": \"0\",\r\n      \"{numpad1}\": \"1\",\r\n      \"{numpad2}\": \"2\",\r\n      \"{numpad3}\": \"3\",\r\n      \"{numpad4}\": \"4\",\r\n      \"{numpad5}\": \"5\",\r\n      \"{numpad6}\": \"6\",\r\n      \"{numpad7}\": \"7\",\r\n      \"{numpad8}\": \"8\",\r\n      \"{numpad9}\": \"9\",\r\n    };\r\n  }\r\n\r\n  static getButtonDisplayName = (button, display, mergeDisplay) => {\r\n    if(mergeDisplay){\r\n      display = Object.assign({}, Utilities.getDefaultDiplay(), display);\r\n    } else {\r\n      display = display || Utilities.getDefaultDiplay();\r\n    }\r\n\r\n    return display[button] || button;\r\n  }\r\n\r\n  static getUpdatedInput = (button, input, options) => {\r\n    let output = input;\r\n    let newLineOnEnter = options.newLineOnEnter;\r\n\r\n    if((button === \"{bksp}\" || button === \"{backspace}\") && output.length > 0){\r\n      /**\r\n       * Emojis are made out of two characters, so we must take a custom approach to trim them.\r\n       * For more info: https://mathiasbynens.be/notes/javascript-unicode\r\n       */\r\n      let lastTwoChars = output.slice(-2);\r\n      let emojiMatched = lastTwoChars.match(/([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g);\r\n\r\n      if(emojiMatched){\r\n        output = output.slice(0, -2);\r\n      } else {\r\n        output = output.slice(0, -1);\r\n      }\r\n    } else if(button === \"{space}\")\r\n      output = output + ' ';\r\n    else if(button === \"{tab}\")\r\n      output = output + \"\\t\";\r\n    else if((button === \"{enter}\" || button === \"{numpadenter}\") && newLineOnEnter)\r\n      output = output + \"\\n\";\r\n    else if(button.includes(\"numpad\") && Number.isInteger(Number(button[button.length - 2]))){\r\n      output = output + button[button.length - 2];\r\n    }\r\n    else if(button === \"{numpaddivide}\")\r\n      output = output + '/';\r\n    else if(button === \"{numpadmultiply}\")\r\n      output = output + '*';\r\n    else if(button === \"{numpadsubtract}\")\r\n      output = output + '-';\r\n    else if(button === \"{numpadadd}\")\r\n      output = output + '+';\r\n    else if(button === \"{numpadadd}\")\r\n      output = output + '+';\r\n    else if(button === \"{numpaddecimal}\")\r\n      output = output + '.';\r\n    else if(!button.includes(\"{\") && !button.includes(\"}\"))\r\n      output = output + button;\r\n\r\n    return output;\r\n  }\r\n\r\n  static camelCase = (string) => {\r\n    return string.toLowerCase().trim().split(/[.\\-_\\s]/g).reduce((string, word) => string + word[0].toUpperCase() + word.slice(1));\r\n  };\r\n\r\n}\r\n\r\nexport default Utilities;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/services/Utilities.js"],"sourceRoot":""}